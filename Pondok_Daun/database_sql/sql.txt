CREATE DATABASE `pondok_daun4`;

USE `pondok_daun4`;

CREATE TABLE `bookingtable`(
	`bookingID` INT(10) PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR(50),
	`no_of_people` INT(10),
	`bookingTimeandDate` DATE
);

CREATE TABLE `catering`(
	`cateringID` INT(10) PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR(50),
	`description` VARCHAR(50),
	`timeanddate` DATE
);

CREATE TABLE `shoppingCart`(
	`cartID` INT(10) PRIMARY KEY AUTO_INCREMENT,
	`orderID` VARCHAR(10),
	`totalprice` DOUBLE
);

CREATE TABLE `guest`(
	`guestID` INT(10) PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR(50),
	`address` VARCHAR(150)
);

CREATE TABLE `menu`(
   	`itemID` VARCHAR(10) PRIMARY KEY,
   	`type` VARCHAR(50)
);

CREATE TABLE `item`(
   	`cartID` INT(10),
   	`foodID` INT(10),
   	`quantity` INT(10)
);

CREATE TABLE `order`(
	`orderID` INT(10) PRIMARY KEY AUTO_INCREMENT,
	`customerID` INT(10),
	`orderDetails` VARCHAR(50),
	`orderType` VARCHAR(50),
	`cartID` INT(10),
   	`totalPrice` DOUBLE(10),	
	FOREIGN KEY (`cartID`) REFERENCES `shoppingCart`(`cartID`)
);
	
CREATE TABLE `member`(
	`memberID` INT(10) PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR(50),
	`address` VARCHAR(150),
	`email` INT(10),
	`orderID` INT(10),
	`password` VARCHAR(150),
	`contact` INT(10),
	FOREIGN KEY (orderID) REFERENCES `order`(orderID)
);

	
CREATE TABLE `description`(
	`topdescription` VARCHAR(150),
	`bottomdescription` VARCHAR(150),
	`address` VARCHAR(50),
	`openinghours` INT(10),
	`images` LONGBLOB
);

CREATE TABLE `food`(
	`foodID` INT(10) PRIMARY KEY,
	`foodName` VARCHAR(150),
	`price` DOUBLE(10),
	`description` VARCHAR(30),
    FOREIGN KEY (foodID) REFERENCES `menu`(itemID)
);
	
CREATE TABLE `drink`(
	`drinkID` INT(10) PRIMARY KEY,
    `drinkName` VARCHAR(30),
	`price` DOUBLE(10),
	`description` VARCHAR(30),
	FOREIGN KEY (drinkID) REFERENCES `menu`(itemID)
);

CREATE TABLE `restaurant`(
	`menuID` INT(10) PRIMARY KEY,
	`bookingID` INT(10) PRIMARY KEY,
	`cateringID` INT(10) PRIMARY KEY,
    `orderID` INT(10) PRIMARY KEY,
    FOREIGN KEY (menuID) REFERENCES `menu`(itemID),
	FOREIGN KEY (cateringID) REFERENCES `catering`(cateringID),
	FOREIGN KEY (bookingID) REFERENCES `booking`(bookingID),
	FOREIGN KEY (orderID) REFERENCES `order`(orderID)
);